#!/bin/bash



# Umask that lets the group have permissions to default files.
umask 0002




# If this shell is not interactive, do nothing below this.
if [ -z "$PS1" ]; then
    # This shell is not interactive.
    return
fi




[ -f "$HOME/.motd" ] && cat "$HOME/.motd"

# Enable colors for ls, etc.  Prefer $HOME/.dir_colors #64489
if [[ -f ~/.dir_colors ]]; then
	eval `dircolors -b ~/.dir_colors`
elif [[ -f /etc/DIR_COLORS ]]; then
	eval `dircolors -b /etc/DIR_COLORS`
fi
if ! ls --color >&/dev/null; then
	alias l='ls -CFh'
    # Makes it work on OSX
    export CLICOLOR=""
else
	alias l='ls -CFh --color'
fi
alias la='l -a'
alias ll='la -l'
alias d='du -hs `\ls -A`'
if which vim >& /dev/null; then
	EDITOR=vim
	VISUAL=vim
	export EDITOR VISUAL
	alias v='vim'
elif which vi >& /dev/null; then
	EDITOR=vi
	VISUAL=vi
	export EDITOR VISUAL
	alias v='vi'
fi
alias c='cd'
alias cd~='cd ~'
alias cd-='cd -'
alias cd..='cd ..'
alias ..='cd ..'
alias mv='mv -i'
alias cp='cp -i'

if ! grep --color >&/dev/null; then
	alias grep="grep --color"
fi
alias g='grep -iE'
alias gr='grep -rinsEH'


if ! less -r >&/dev/null; then
	alias less="less -r"
fi

# Taking this out because you have to connect to the internet to get success.
#if ! whois -H >&/dev/null; then
	#alias whois="whois -H"
#fi
alias ps='COLUMNS=400 ps'
alias p='ps -elf'
if cal -3 >&/dev/null; then
	alias cal='cal -3'
fi

# Path stuff.
pathmunge () {
	if ! echo ":${PATH}:" | grep ":${1}:" >&/dev/null; then
		if [ "$2" = "after" ] ; then
			PATH="$PATH:$1"
		else
			PATH="$1:$PATH"
		fi
	fi
}

# User's bin is more important than everything.
pathmunge "$HOME/bin"
# profile is after everything
pathmunge "$HOME/profile" after
# finally the local dir
pathmunge "." after

export PATH

# This let's you have small typos in the "cd" cmd.
shopt -s cdspell

# enable bash completion in interactive shells
if [ -f /etc/bash_completion -a -z "$BASH_COMPLETION" ]; then
    . /etc/bash_completion
fi

# Set the fancy prompt, start by removing what was there.
PS1="\[\e[00;00m\]"
# Just for Debian set var with chroot you're in (used in the prompt below)
if [ -z "$debian_chroot" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot="$(cat /etc/debian_chroot) "
fi
PS1="${debian_chroot:+($debian_chroot)}"
# Add the return code and time.
PS1="$PS1"'$? \[\e[00;33m\]\D{%H:%M} '
# Add (user and) host.
if [[ "root" == "$USER" ]]; then
    PS1="$PS1"'\[\e[01;31m\]\h '
else
    PS1="$PS1"'\[\e[01;32m\]\u@\h\[\e[00m\]:'
fi
# Working dir.
PS1="$PS1"'\[\e[01;34m\]\W\[\e[00;34m\]'
# Git branch and dirty.
function PS1GitBranchDirty {
    local br
    br=$(git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\1/')
    if [[ -z "$br" ]]; then
        echo ""
        return 0
    fi
    echo -n "[$br"
    if [[ $(git status 2> /dev/null | tail -n1) != 'nothing to commit (working directory clean)' ]]; then
        echo -n '*'
    fi
    echo "]"
} 
export PS1="$PS1"'$(PS1GitBranchDirty)\$\[\e[00m\] '

# Clear the PROMPT_COMMAND
export PROMPT_COMMAND=""
# Change the window title of X terminals
case $TERM in
	xterm*|rxvt|Eterm|eterm)
		export PROMPT_COMMAND='echo -ne "\e]0;${USER}@${HOSTNAME%%.*}:${PWD/$HOME/~}\007"'
		;;
	screen)
		export PROMPT_COMMAND='echo -ne "\e_${USER}@${HOSTNAME%%.*}:${PWD/$HOME/~}\e\\"'
		;;
esac

# This is my new fancy prompt command.
# ###    This MUST happen after any other PROMPT_COMMAND things.
#if [ "$TERM" == "screen" ]; then
	#[[ -f "$HOME/profile/prompt_command-time" ]] && . "$HOME/profile/prompt_command-time"
#fi

# HISTORY things
shopt -s histappend
export HISTIGNORE="&:[ ]*:bg:fg:exit"

# When do you _not_ want extended globbing?
shopt -s extglob


# Aliases to do the recursive svn add/remove.
alias svn-addremove="svn st | grep '^\?' | awk '{print \$2}' | xargs svn add && svn st | grep '^\!' | awk '{print \$2}' | xargs svn rm"
